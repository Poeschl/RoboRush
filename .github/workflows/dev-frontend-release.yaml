name: Publish latest frontend image
on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: 🏗️ Install Node.js 22.x
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: 🏗️ Install packages
        run: cd frontend && npm ci

      - name: ✅ Test frontend
        run: cd frontend && npm run type-check && npm run test:unit

  build:
    name: Build Vue
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: 🏗️ Install Node.js 22.x
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: 🏗️ Install packages
        run: cd frontend && npm ci

      - name: ⚙️ Build application
        run: cd frontend && npm run build

      - name: 🗄️ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend/dist/*
          retention-days: 1

  image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
    steps:
      - name: ↩️ Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: 🗄️ Download artifact
        uses: actions/download-artifact@v5
        with:
          name: frontend
          path: frontend/dist/

      - name: ℹ️ Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/poeschl/roborush
          tags: frontend

      - name: 🏗️ Install qemu dependency
        uses: docker/setup-qemu-action@v3

      - name: ⚙️ Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: frontend/docker/Dockerfile
          context: frontend
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          # Disable layer caching
          layers: false

      - name: 🔑 GHCR Login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push images
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}

      - name: 📢 Print images summary
        run: |
          echo "## Build and pushed frontend images" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.push-image.outputs.registry-paths }}' >> $GITHUB_STEP_SUMMARY

plugins {
  id 'org.springframework.boot' version '3.2.1'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'org.jetbrains.kotlin.jvm' version '1.9.22'
  id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
  id 'org.jetbrains.kotlin.plugin.noarg' version "1.9.22"
  id 'org.jetbrains.kotlin.kapt' version "1.9.22"
}

group = 'xyz.poeschl.pathseeker'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

repositories {
  mavenCentral()
}

ext {
  set('testcontainersVersion', "1.19.3")
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.flywaydb:flyway-core'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
  implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
  implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
  implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
  implementation 'org.postgresql:postgresql'


  kapt 'org.mapstruct:mapstruct-processor:1.5.5.Final'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude module: 'mockito-core'
  }
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'io.mockk:mockk:1.13.8'
}

dependencyManagement {
  imports {
    mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
  }
}

noArg {
  annotation("jakarta.persistence.Entity")
}

kotlin {
  jvmToolchain {
    languageVersion.set(JavaLanguageVersion.of("17"))
  }
}

kapt {
  arguments {
    arg('mapstruct.defaultComponentModel', 'spring')
  }
}

tasks.named('test') {
  useJUnitPlatform()
}
